<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<book>
  <title>Vývojářská dokumentace ke hře Alcominance</title>

  <chapter>
    <title>Úvod do koleček</title>

    <section>
      <title>Co to je vlastně ten objekt.</title>

      <para>Objektem je myšleno vše, co má ve hře nějakou funkci podstatnou
      pro hru. Neboli vše, co neslouží jen ku vzhledu, ale obsahuje herní
      logiku. A ještě více zjednodušeně, jsou to prostě budovy, stromy a
      tupouni, vše ostatní objekty nejsou. U budov a tupounů je to jasné,
      stromy jsou objekty (no spíš takové objektíky), jen kvůli tomu, že se
      dají pokácet a proto musí mít v sobě taky herní logiku.</para>
    </section>

    <section>
      <title>Komunikace objektů</title>

      <para> Všechny objekty (budovy, tupouni), mezi sebou komunikují tzv.
      systémem zpráv. Přes zprávy dostává budova příkazy od systému, nebo od
      ostatních objektů. Zprávy by se tedy daly rozdělit podle významu na
      ovládací, informační a domlouvací. Ale to jen pro přehlednost, jiný
      význam to nemá.</para>

      <para>Nejlepším příkladem ovládací zprávy je zpráva
      <constant>BMSG_Select.</constant> Tuhle zprávu systém posílá objektu,
      pokud uživatel ten objekt vybere. Objekt si pak kolem sebe zobrazí
      takové to barevné kolečko.</para>

      <para>U zpráv domlouvacích je to třošičku složitější. Tam je obvykle
      potřeba několik zpráv, než se objekty vůbec domluví. Pokud například
      chce budova, přinést nějaké zásoby, nejdřív u cílové budovy vytvoří
      objednávku. </para>
    </section>
  </chapter>

  <chapter>
    <title>Programování</title>

    <section>
      <title>Úvod</title>

      <para>Vsichni koho nezajma jak je to udelane vevnitr, mohou tuhle cast
      klidne preskocit, ale pro pochopeni jak funguje skript je lepsi
      minimalne to zbezne projet.</para>

      <para>Hra bezi na Hoe :) O Hoe3D, tedy knihovne co se stara o samotnou
      grafiku, zvuky atd se zminovat nebudu. Je to na jinou dokumentaci a
      dokonce se nikde v Becheru ani primo nepouzije. Vse je zastreseno
      knihovnou HoeGame. dokumentace k HoeGame, ktera se kazdou noc
      aktualizuje je na url <ulink
      url="http://hoe.gejza.net/doc/HoeGame/">http://hoe.gejza.net/doc/HoeGame/</ulink>
      (heslo jak do svn)</para>

      <para>Krome HoeGame se jeste pouziva knihovna HoeCore, tahle knihovna
      nic nezastresuje, pouze ma v sobe zakladni typy, jako seznamy, listy,
      stringy atd.. Dokumentace k ni: <ulink
      url="http://hoe.gejza.net/doc/HoeCore/">http://hoe.gejza.net/doc/HoeCore/</ulink></para>
    </section>

    <section>
      <title>Přehled objektů</title>

      <para>BechApp - hlavni aplikace GetApp()
            BecherGame - hra - GetBecher()
            BecherLevel - aktualni level - GetLevel()

            Console, Lang, LuaScript -> GetCon() GetLang() GetLua()
            BecherResources - resource - GetResMgr()

            V editoru, podobne, akorat misto GetApp -> GetEditor
            a pribylo GetProp() pro property

      
      </para>
    </section>
  </chapter>

  <chapter>
    <title>Skriptování</title>

    <para>funkce skriptu jak skript pracuje reference jake funkce se daji
        pouzivat

        kdy se spousteji skripty
        pri nacitani
        funkce
        
    princip
        
        popis funkci:

        nastaveni a ziskani promenych
        SetVar GetVar
        GetMem
        SetMem

        ovladani
        AddButton ClearButtons
        Camera

        system:
        info
        PlaySound
        
        SetBuilding
        AddCash
        GetCash
        
        GetInfo
        SendMsg
        

        intro:
        
        Wait
        SetText
        LoadImage
        Fade

    priklady
        
    
    </para>
  </chapter>

  <chapter>
    <title>Struktura souborů</title>

    <section>
      <title>Datové soubory</title>

      <para>Modely a textury (včetně 2D obrázků) jsou uloženy v adresáři
      <filename>data</filename>. Adresář <filename>data_old</filename>
      obsahuje pouze staré zmršené soubory, které se postupne musí vytvořit
      znovu. jsou tam jen kvuli tomu aby to šlo spustit.</para>

      <para>Pro vytváření souborů HX (to jsou ty s texturama) slouží utilita
      <filename>htex.exe</filename></para>

      <para>Příklad pro vytvoření balíku textur ze vsech jpegu co jsou v
      aktualni adresáři:</para>

      <para><code>htex.exe vysledek.hx *.jpg</code></para>

      <para>Vytváření modelů je tošku složitější, popíšu to proto v jiné
      dokumentaci.</para>

      <para></para>
    </section>

    <section>
      <title>Mapy</title>

      <para>Soubory s levely jsou uloženy v adresáři
      <filename>maps</filename>. Jsou to binární soubory, uložené v svn, tak
      je průser, když je editují dva lidi najednou. Otevřít se dají v editoru.
      Platí, že co jeden soubor to jedna mapa.</para>

      <para>V souboru s mapou jsou uloženy celkové informace o mapě, jména
      skriptu, které se mají nahrát při zavedení mapy (jen ty, které jsou
      patří pouze k tomuhle levelu). Terén, a seznam objektů.</para>

      <para>Savegame používá podobný formát jako mapa. Má v sobě ale jen
      uložení všech objektů a referenci na soubor mapy ze které má načíst
      všechny ostatní informace.</para>
    </section>

    <section>
      <title>Organizace skriptu</title>

      <para>Skripty se nacházejí v adresáři <filename>scripts</filename>.
      Skript se načítá z několika souborů v různých chvílich. Při startu hry
      se spustí skript <filename>init.lua</filename> Ten má za úkol
      zaregistrovat všechny datové soubory, nastavit lokalizaci atd. Nahrává
      se ještě před intrem. Tenhle soubor ale nezůstává v paměti. Takže
      všechny funkce, které se v něm definují se nedají volat ze skriptu
      hry.</para>

      <para>Podobně jako init skript se používá i load.lua. V něm je uloženo
      nahrávání modelů, Textur pro 2D a zvuků. Nahrává se až po intru před
      menu, ale stejně jako init skript nezůstává v paměti.</para>

      <para>Další skript je intro.lua. Pouští se při intru a je v něm
      naprogramováno intro. Jako jediný existuje pro každý jazyk zvlášť.
      Obsahuje spousty textů a to by bylo dost na pytel je všechny vytahovat a
      dávat do lokalizace.</para>

      <para>Nejdůležitější jsou ale soubory, které se používají pro samotnou
      hru. Nahrávají se před každým levelem. Pro lepší orientaci je jich
      několik. Většina budov by měla mít svuj soubor, to co se nikam nevejde
      je pak v souboru <filename>main.lua</filename></para>
    </section>

    <section>
      <title>HUD a dialogy</title>

      <para>Soubory ve kterých je uložené UI jsou textové, mají příponu .menu
      a jsou ve stejném adresáři jako skripty. Existuje pro ně nástroj
      Hoe2Deditor, ale je dost nedodělaný, proto doporučuju ho použít jen pro
      vygenerování noveho dialogu a pak už dělat úpravy jen ručně. Kdo ho
      vyzkouší, muže rovnou do mantisu hazet bugy. Rozdělení je jednoduché,
      <filename>hud.menu</filename> má na starosti pozadí hudu, soubory které
      se jmenuji stejně jako budovy se kreslí před hud. Nejlepším příkladem je
      kouknout se na už vytvorené soubory. Další soubory se jmenují podle toho
      co dělají, takže je ani nebudu popisovat.</para>
    </section>
  </chapter>

  <chapter>
    <title>uprava ui</title>

    <para></para>

    <table>
      <title>Přehled 2D objektů</title>

      <tgroup cols="2">
        <tbody>
          <row>
            <entry>static</entry>

            <entry>Statický obrázek</entry>
          </row>

          <row>
            <entry>Buttonusr</entry>

            <entry>tlačítko</entry>
          </row>

          <row>
            <entry>text</entry>

            <entry>vypis textu</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  </chapter>

  <chapter>
    <title>Vytvareni levelu</title>

    <para></para>
  </chapter>

  <chapter>
    <title>Editor</title>

    <para></para>
  </chapter>

  <appendix>
    <title>Vars</title>

    <para>Jak to pracuje?</para>
  </appendix>
</book>
